# https://coding-bootcamps.com/blog/build-containerized-applications-with-golang-on-kubernetes.html#p4

apiVersion: apps/v1
kind: Deployment # Type of Kubernetes resource
metadata:
  name: go-e-learning # Name of the Kubernetes resource
spec:
  replicas: 3 # Number of pods to run at any given time
  selector:
    matchLabels:
      app: go-e-learning # This deployment applies to any Pods matching the specified label
  template: # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels: # The labels that will be applied to all of the pods in this deployment
        app: go-e-learning
    spec: # Spec for the container which will run in the Pod
      containers:
        - name: go-e-learning
          image: go-e-learning
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080 # Should match the port number that the Go application listens on
          livenessProbe: # To check the health of the Pod
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe: # To check if the Pod is ready to serve traffic or not
            httpGet:
              path: /readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
